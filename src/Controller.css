.controller {
  width: 100%;
  height: 100%;
  display: grid;
  grid-template-columns: 1fr 1fr;

  --control-size: 100px;
}

.controller .left-hand,
.controller .right-hand {
  display: grid;
  grid-template-rows: calc(var(--control-size) * 0.5) 1fr calc(
      var(--control-size) * 1.2
    );
}

.controller .trigger-wrapper {
  display: flex;
  align-items: center;
  justify-content: center;
}

.controller .trigger-wrapper .trigger {
  width: 100%;
  height: 100%;
  display: grid;
  grid-template-rows: 3fr 1fr;
  padding: calc(var(--control-size) * 0.1);
}

.controller .trigger-wrapper .trigger .secondary {
  background-color: hsla(0deg 0% 100% / 10%);
}

.controller .trigger-wrapper .trigger .secondary[data-pressed="true"] {
  background-color: hsla(0deg 0% 100% / 80%);
}

.controller .trigger-wrapper .trigger .primary {
  background-color: hsla(0deg 0% 100% / 100%);
  opacity: calc(0.1 + var(--pressure) * 0.7);
}

.controller .stick-wrapper {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: calc(var(--control-size) * 0.1);
}

.controller .left-hand .stick-wrapper {
  align-items: flex-end;
  justify-content: flex-start;
}

.controller .right-hand .stick-wrapper {
  align-items: flex-start;
  justify-content: flex-end;
}

.controller .stick-wrapper .stick {
  width: var(--control-size);
  height: var(--control-size);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: hsla(0deg 0% 100% / 10%);
}

.controller .stick-wrapper .stick .position {
  width: 50%;
  height: 50%;
  background-color: hsla(0deg 0% 100% / 20%);
  border-radius: 50%;
  transform: translate(
    calc(30% * var(--horizontal)),
    calc(30% * var(--vertical))
  );
}

.controller .stick-wrapper .stick .position[data-pressed="true"] {
  background-color: hsla(0deg 0% 100% / 80%);
}

.controller .direction-buttons-wrapper {
  display: flex;
  align-items: flex-start;
  justify-content: flex-start;
  padding: calc(var(--control-size) * 0.1);
}

.controller .direction-buttons-wrapper .direction-buttons {
  width: var(--control-size);
  height: var(--control-size);
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  border-radius: 50%;
  overflow: hidden;
}

.controller .direction-buttons-wrapper .direction-buttons .button {
  position: absolute;
  background-color: hsla(0deg 0% 100% / 10%);
}

.controller
  .direction-buttons-wrapper
  .direction-buttons
  .button[data-pressed="true"] {
  background-color: hsla(0deg 0% 100% / 80%);
}

.controller .direction-buttons-wrapper .direction-buttons .button.up {
  width: 15%;
  height: 40%;
  top: 0;
}

.controller .direction-buttons-wrapper .direction-buttons .button.down {
  width: 15%;
  height: 40%;
  bottom: 0;
}

.controller .direction-buttons-wrapper .direction-buttons .button.right {
  width: 40%;
  height: 15%;
  right: 0;
}

.controller .direction-buttons-wrapper .direction-buttons .button.left {
  width: 40%;
  height: 15%;
  left: 0;
}

.controller .action-buttons-wrapper {
  display: flex;
  align-items: flex-end;
  justify-content: flex-end;
  padding: calc(var(--control-size) * 0.1);
}

.controller .action-buttons-wrapper .action-buttons {
  width: var(--control-size);
  height: var(--control-size);
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
}

.controller .action-buttons-wrapper .action-buttons .button {
  width: 37.5%;
  height: 37.5%;
  border-radius: 50%;
  position: absolute;
  background-color: hsla(0deg 0% 100% / 10%);
}

.controller
  .action-buttons-wrapper
  .action-buttons
  .button[data-pressed="true"] {
  background-color: hsla(0deg 0% 100% / 80%);
}

.controller .action-buttons-wrapper .action-buttons .button.x {
  left: 0;
}

.controller .action-buttons-wrapper .action-buttons .button.y {
  top: 0;
}

.controller .action-buttons-wrapper .action-buttons .button.a {
  bottom: 0;
}

.controller .action-buttons-wrapper .action-buttons .button.b {
  right: 0;
}
